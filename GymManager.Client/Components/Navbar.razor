@using Blazored.LocalStorage
@using GymManager.Client.Services
@inject AuthStateService AuthState
@inject NavigationManager Navigation
@inject MembershipService MembershipService
@inject ILocalStorageService LocalStorage

<nav class="navbar navbar-expand-lg navbar-dark px-3 navbar_style">
    <div class="container-fluid">
        <a class="navbar-brand d-flex align-items-center nav_text" href="/">
            <i class="fa-solid fa-dumbbell me-2" style="color: #d52020;"></i>
            PrimeFit
        </a>

        @if (AuthState.UserRole == "Member" && hasActiveMembership)
        {
            <span class="text-danger ms-4 fw-semibold" style="font-size: 0.95rem;">
                <i class="fa-regular fa-clock me-1 fa-spin"></i> @expirationMessage
            </span>
        }

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar" aria-controls="mainNavbar" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse justify-content-end" id="mainNavbar">
            <ul class="navbar-nav mb-3 mb-lg-0 me-4 px-2 py-2">
                @if (AuthState.UserRole != "Admin")
                {
                    @if (AuthState.UserRole == "Member")
                    {
                        <li class="nav-item">
                            <a class="nav-link nav_text" href="/messages">Message your trainer</a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link nav_text" href="/messages">Message your member</a>
                        </li>
                    }

                    <li class="nav-item">
                        <a class="nav-link nav_text" href="/requests">Requests</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link nav_text" href="/manage-requests">Manage requests</a>
                    </li>
                }
                @if (AuthState.UserRole != "Member" || !hasActiveMembership)
                {
                    <li class="nav-item">
                        <a class="nav-link nav_text" href="/offers">Offers</a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link nav_text" href="/equipment">Equipment</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link nav_text" href="/trainers">Trainers</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link nav_text" href="/progress">Progress</a>
                </li>
                @if (AuthState.IsLoggedIn && AuthState.UserRole == "Admin")
                {
                    <li class="nav-item">
                        <a class="nav-link nav_text" style="color: #f5b510" href="/admin/dashboard">Dashboard</a>
                    </li>
                }
                @if (AuthState.IsLoggedIn && AuthState.UserRole == "Member")
                {
                    <li class="nav-item">
                        <a class="nav-link nav_text" style="color: #f5b510" href="/member/dashboard">Dashboard</a>
                    </li>
                }
                @if (AuthState.IsLoggedIn && AuthState.UserRole == "Trainer")
                {
                    <li class="nav-item">
                        <a class="nav-link nav_text" style="color: #f5b510" href="/trainer/dashboard">Dashboard</a>
                    </li>
                }
            </ul>
            
            @if (AuthState.IsLoggedIn)
            {
                <a class="nav-link text-white" href="#" title="Logout" @onclick="Logout">
                    <i style="color: #e01b1b" class="fa-solid fa-right-from-bracket"></i>
                </a>
            }
            else
            {
                <a class="nav-link text-white" href="/login" title="Login">
                    <i class="fa-solid fa-right-to-bracket"></i>
                </a>
            }
        </div>
    </div>
</nav>

@code
{
    private bool hasActiveMembership;
    private string? expirationMessage;

    protected override async Task OnInitializedAsync()
    {
        AuthState.OnChange += StateHasChanged;

        if (AuthState.IsLoggedIn && AuthState.UserRole == "Member")
        {
            var membership = await MembershipService.GetMyActiveMembershipAsync();

            if (membership != null && membership.EndDate.HasValue && membership.EndDate > DateTime.Now)
            {
                hasActiveMembership = true;

                var timeLeft = membership.EndDate.Value - DateTime.Now;

                expirationMessage = timeLeft.TotalHours < 24
                    ? $"Your pass expires in {Math.Ceiling(timeLeft.TotalHours)} hours"
                    : $"Your pass expires in {Math.Ceiling(timeLeft.TotalDays)} days";
            }

        }
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        AuthState.SetLoginState(false);
        Navigation.NavigateTo("/", true);
    }

    public void Dispose()
    {
        AuthState.OnChange -= StateHasChanged;
    }
}
